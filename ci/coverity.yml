jobs:
  - job: scan
    displayName: "Coverity Scan"
    strategy:
      matrix:
        Linux:
          owarch:   ${{ variables['owarch_lnx'] }}
          owobjdir: ${{ variables['owobjdir_lnx'] }}
          owimage:  ${{ variables['owimage_lnx'] }}
          owtools:  ${{ variables['owtools_lnx'] }}
          owscript: $(Build.SourcesDirectory)/ci/coverity.sh
          owcoverity.tool.src: linux64
          owcoverity.tool.archive: /tmp/cov-analysis-linux.tgz
          owcoverity.tool.base: /tmp/coverity-scan-analysis
          owcoverity.script: $(Build.SourcesDirectory)/ci/covbuild.sh
          owcoverity.results.archive: open-watcom-v2.tgz
        #Windows:
          #owarch:   variables['owarch_nt']
          #owobjdir: variables['owobjdir_nt']
          #owimage:  variables['owimage_nt']
          #owtools:  variables['owtools_nt']
          #owscript: $(Build.SourcesDirectory)\ci\coverity.cmd
          #owcoverity.tool.src: win64
          #owcoverity.tool.archive: $(TEMP)\cov-analysis-windows.zip
          #owcoverity.tool.base: $(TEMP)\coverity-scan-analysis
          #owcoverity.script: $(Build.SourcesDirectory)\ci\covbuild.cmd
          #owcoverity.results.archive: open-watcom-v2.zip
    timeoutInMinutes: 240
    variables:
      owcoverity.project:  open-watcom/open-watcom-v2
      owcoverity.tool.cmd: ''
    pool:
      vmImage: '$(owimage)'
    steps:
    - template: dosbox.yml
    - script: |
        curl -s -o $(owcoverity.tool.archive) https://scan.coverity.com/download/cxx/$(owcoverity.tool.src) -d "project=$(owcoverity.project)&token=$(owcoverity.token)"
        mkdir $(owcoverity.tool.base)
      displayName: "Download Coverity Tools"
    - script: |
        tar xzf $(owcoverity.tool.archive) -C $(owcoverity.tool.base)
        echo "##vso[task.setvariable variable=owcoverity.tool.cmd;]`find $(owcoverity.tool.base) -type f -name 'cov-build' -exec realpath {} \;`"
      displayName: "Restore Coverity Tools Linux"
      condition: in( variables.owarch, variables.owarch_lnx )
    - script: |
        7z x -aoa -o$(owcoverity.tool.base) $(owcoverity.tool.archive)
        pushd $(owcoverity.tool.base)
        for /f %%a in ('dir /b /s cov-build.exe') do echo ##vso[task.setvariable variable=owcoverity.tool.cmd;]%%a
        popd
      displayName: "Restore Coverity Tools Windows"
      condition: in( variables.owarch, variables.owarch_nt )
    - script: $(owscript)
      displayName: "Build Coverity data"
    - script: |
        tar czf $(owcoverity.results.archive) cov-int
        echo "##vso[task.setvariable variable=owsha;]`git rev-parse --short HEAD`"
      displayName: "Archive Coverity data Linux"
      condition: in( variables.owarch, variables.owarch_lnx )
    - script: |
        7z a $(owcoverity.results.archive) cov-int
        $(Build.SourcesDirectory)\ci\slash.cmd $(owcoverity.results.archive) > lst.txt
        7z rn $(owcoverity.results.archive) @lst.txt
        del lst.txt
      displayName: "Archive Coverity data Windows"
      condition: in( variables.owarch, variables.owarch_nt )
    - script: >
        response=$(curl -s
        --write-out "\n%{http_code}\n"
        --form project=$(owcoverity.project)
        --form token=$(owcoverity.token)
        --form email=malak.jiri@gmail.com
        --form file=@$(owcoverity.results.archive)
        --form version=$(owsha)
        --form description="Open Watcom V2 Travis CI build"
        https://scan.coverity.com/builds)
        displayName: "Upload Coverity data"
    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: '$(owcoverity.tool.src)'
        targetPath: '$(owcoverity.results.archive)'
      displayName: "Save Coverity data"
