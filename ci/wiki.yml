stages:
  - stage: wikidocs
    displayName: "Wiki Docs Build"
    dependsOn:
      - docs
    jobs:
      - job: WikiDocs
        displayName: "Wiki Documentation Build"
        variables:
          owbuild.stage:    docs
          owarch:           ${{ variables.owarch_nt }}
          owimage:          ${{ variables.owimage_nt }}
          owtools:          ${{ variables.owtools_nt }}
          owscript:         ${{ variables.owscript_nt }}
        strategy:
          matrix:
            Html:
              owdoctarget:  wikihtml .and wikihtml .or -- -- docset=wikihtml
              owartifname:  wiki-dochtml
            PDF:
              owdoctarget:  wikipdf .and wikipdf .or -- -- docset=wikipdf
              owartifname:  wiki-docpdf
        pool:
          vmImage: $(owimage)
        steps:
        - template: artfload.yml
          parameters:
            path:       build/$(owobjdir)
            prefix:     build
        - script: ci/$(owscript)
          displayName: "Documentation Build"
        - script: |
            set
            xcopy docs\html\*.htm $(Build.ArtifactStagingDirectory)\
            xcopy docs\html\*.bmp $(Build.ArtifactStagingDirectory)\
            ren $(Build.ArtifactStagingDirectory)\*.htm *.html
            xcopy docs\pdf\*.pdf $(Build.ArtifactStagingDirectory)\
          displayName: "Copy Artifact Wiki files"
        - task: PublishPipelineArtifact@1
          displayName: "Save Artifact $(owartifname)"
          inputs: 
            artifactName: "$(owartifname)"
            targetPath: $(Build.ArtifactStagingDirectory)
  - stage: Wiki
    displayName: "Wiki Docs Update"
    dependsOn:
      - wikidocs
    #condition: >
    #  and(
    #    succeeded(), 
    #    in( variables['Build.Reason'], 'Schedule' )
    #  )
    jobs:
      - job: wiki
        displayName: "Wiki Documentation Update"
        variables:
          owarch:           ${{ variables.owarch_nt }}
          owimage:          ${{ variables.owimage_nt }}
          owtools:          ${{ variables.owtools_nt }}
          owscript:         ${{ variables.owscript_nt }}
          owwiki_depth:     10
          owwikiproject:    open-watcom/open-watcom-v2-webdocs
          owwikipath:       wiki
          owwikiroot:       $(Pipeline.Workspace)\$(owwikipath)
        pool:
          vmImage: $(owimage)
        steps:
        - template: gituser.yml
        - checkout: wiki
          persistCredentials: true
          path: $(owwikipath)
          displayName: "Wiki Docs clone"
        - task: DownloadPipelineArtifact@2
          displayName: "Load Artifact wiki-dochtml"
          inputs: 
            buildType:    'current'
            artifactName: "wiki-dochtml"
            targetPath:   $(owwikiroot)\docs
        - task: DownloadPipelineArtifact@2
          displayName: "Load Artifact wiki-docpdf"
          inputs: 
            buildType:    'current'
            artifactName: "wiki-docpdf"
            targetPath:   $(owwikiroot)\docs
        - script: |
            cd $(owwikiroot)
            git add -v -f .
            git status -uno --porcelain
            if [ -n "$(git status -uno --porcelain)" ]; then
              git commit -v -m "Azure Pipelines build $(Build.BuildNumber)"
              git checkout -b temp
              git checkout master
              git merge temp
              git branch -d temp
              git push -v
            fi
          displayName: "Wiki Docs update"
