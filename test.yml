# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables: 
  System.Debug: true
  owimage_lnx:  'ubuntu-latest'
  owimage_nt:   'vs2017-win2016'
  owimage_osx:  'macOS-latest'
  owobjdir_lnx: binlnx
  owobjdir_nt:  binnt
  owobjdir_osx: binosx
  owtools_lnx:  GCC
  owtools_nt:   VISUALC
  owtools_osx:  CLANG
  owscript_lnx: buildx.sh
  owscript_nt:  buildx.cmd
  owscript_osx: buildx.sh
  owarch_lnx:   lnx
  owarch_nt:    nt
  owarch_osx:   osx

trigger:
- master

stages:
  - stage: release
    displayName: "GitHub Release"
    jobs:
    - job: release
      displayName: "GitHub Release"
      variables:
        owarch: $(owarch_lnx)
        owtag: Current-build
      pool:
        vmImage: $(owimage_lnx)
      steps:
      - checkout: self
        persistCredentials: true
      - script: git config --global user.email openwatcomtravis@gmail.com
      - script: git config --global user.name "Open Watcom Azure"
      - bash: echo "##vso[task.setvariable variable=owgitstamp;]`git ls-remote --tags . | sed -n -e \"s:\([0-9a-z]*\) *refs/tags/${{ variables.owtag }}^{}:\1:p\"`"
      - bash: echo "##vso[task.setvariable variable=owtagstamp;]$(date +'%Y-%m-%d %H:%M:%S')"
      - bash: >
          if [ ! "$OWGITSTAMP" = "$BUILD_SOURCEVERSION" ]; then
            git tag -d $OWTAG; true;
            git push --delete origin $OWTAG; true;
            git tag -a -m "$OWTAGSTAMP" $OWTAG $BUILD_SOURCEVERSION; true;
            git push origin $OWTAG; true;
          else
            echo "##vso[task.setvariable variable=owtagstamp;]`git tag -l --format='%(contents)' $OWTAG`"
          fi
      - task: GitHubRelease@0
        displayName: "Add Release"
        inputs:
          gitHubConnection: 'open-watcom-v2-releases'
          repositoryName: '$(Build.Repository.Name)'
          action: 'create'
          target: '$(Build.SourceVersion)'
          tagSource: 'manual'
          tag: '$(owtag)'
          title: '$(owtag)'
          releaseNotesSource: 'input'
          releaseNotes: 'Last updated $(owtagstamp)'
          assets: 'test.yml'
          isPreRelease: true
          addChangeLog: false
